{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst BASE_URL = \"https://task-list-53682-default-rtdb.europe-west1.firebasedatabase.app/\";\nconst useFetch = () => {\n  _s();\n  const [tasks, setNewTask] = useState({});\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchTasksHandler = async function () {\n    let method = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"GET\";\n    let task = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      id: \"\",\n      text: \"\"\n    };\n    try {\n      setPending(true);\n      setError(null);\n      let response = null;\n      if (method === \"DELETE\") {\n        response = await fetch(BASE_URL + \"tasks/\" + task.id + \".json\", {\n          method\n        });\n      } else if (method === \"PATCH\") {\n        response = await fetch(BASE_URL + \"tasks/\" + task.id + \".json\", {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: task.text\n          })\n        });\n      } else {\n        response = await fetch(BASE_URL + \"tasks.json\", {\n          method,\n          headers: {\n            \"Content-Type\": method !== \"GET\" ? \"application/json\" : \"\"\n          },\n          body: method !== \"GET\" ? JSON.stringify({\n            title: task.text\n          }) : null\n        });\n      }\n      if (response.ok) {\n        const data = await response.json();\n        if (method === \"GET\") {\n          setNewTask(data);\n        } else {\n          fetchTasksHandler();\n        }\n      }\n    } catch (error) {\n      setError({\n        message: error.message || \"Something went wrong\"\n      });\n    }\n    setPending(false);\n  };\n  return {\n    pending,\n    error,\n    tasks,\n    fetchTasksHandler\n  };\n};\n_s(useFetch, \"q7HLcHPGAnlUH2a9aSBjzIaaQdI=\");\nexport default useFetch;","map":{"version":3,"names":["useState","BASE_URL","useFetch","tasks","setNewTask","pending","setPending","error","setError","fetchTasksHandler","method","task","id","text","response","fetch","headers","body","JSON","stringify","title","ok","data","json","message"],"sources":["/var/www/Node/training-react/custom-hooks/src/hooks/useFetch.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst BASE_URL = \"https://task-list-53682-default-rtdb.europe-west1.firebasedatabase.app/\"\n\nconst useFetch = () => {\n  const [tasks, setNewTask] = useState({});\n  const [pending, setPending] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const fetchTasksHandler = async (\n    method = \"GET\",\n    task = { id: \"\", text: \"\" }\n  ) => {\n    try {\n      setPending(true);\n      setError(null);\n\n      let response = null;\n\n      if (method === \"DELETE\") {\n        response = await fetch(BASE_URL + \"tasks/\" + task.id + \".json\", {\n          method,\n        });\n      } else if (method === \"PATCH\") {\n        response = await fetch(BASE_URL + \"tasks/\" + task.id + \".json\", {\n          method,\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ title: task.text }),\n        });\n      } else {\n        response = await fetch(BASE_URL + \"tasks.json\", {\n          method,\n          headers: {\n            \"Content-Type\": method !== \"GET\" ? \"application/json\" : \"\",\n          },\n          body: method !== \"GET\" ? JSON.stringify({ title: task.text }) : null,\n        });\n      }\n\n      if (response.ok) {\n        const data = await response.json();\n        if (method === \"GET\") {\n          setNewTask(data);\n        } else {\n          fetchTasksHandler();\n        }\n      }\n    } catch (error) {\n      setError({\n        message: error.message || \"Something went wrong\",\n      });\n    }\n\n    setPending(false);\n  };\n\nreturn (\n    {pending, error, tasks, fetchTasksHandler}\n)\n  \n};\n\nexport default useFetch;"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAG,yEAAyE;AAE1F,MAAMC,QAAQ,GAAG,MAAM;EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACK,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,iBAAiB,GAAG,kBAGrB;IAAA,IAFHC,MAAM,uEAAG,KAAK;IAAA,IACdC,IAAI,uEAAG;MAAEC,EAAE,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAG,CAAC;IAE3B,IAAI;MACFP,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAIM,QAAQ,GAAG,IAAI;MAEnB,IAAIJ,MAAM,KAAK,QAAQ,EAAE;QACvBI,QAAQ,GAAG,MAAMC,KAAK,CAACd,QAAQ,GAAG,QAAQ,GAAGU,IAAI,CAACC,EAAE,GAAG,OAAO,EAAE;UAC9DF;QACF,CAAC,CAAC;MACJ,CAAC,MAAM,IAAIA,MAAM,KAAK,OAAO,EAAE;QAC7BI,QAAQ,GAAG,MAAMC,KAAK,CAACd,QAAQ,GAAG,QAAQ,GAAGU,IAAI,CAACC,EAAE,GAAG,OAAO,EAAE;UAC9DF,MAAM;UACNM,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEC,KAAK,EAAET,IAAI,CAACE;UAAK,CAAC;QAC3C,CAAC,CAAC;MACJ,CAAC,MAAM;QACLC,QAAQ,GAAG,MAAMC,KAAK,CAACd,QAAQ,GAAG,YAAY,EAAE;UAC9CS,MAAM;UACNM,OAAO,EAAE;YACP,cAAc,EAAEN,MAAM,KAAK,KAAK,GAAG,kBAAkB,GAAG;UAC1D,CAAC;UACDO,IAAI,EAAEP,MAAM,KAAK,KAAK,GAAGQ,IAAI,CAACC,SAAS,CAAC;YAAEC,KAAK,EAAET,IAAI,CAACE;UAAK,CAAC,CAAC,GAAG;QAClE,CAAC,CAAC;MACJ;MAEA,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,EAAE;QAClC,IAAIb,MAAM,KAAK,KAAK,EAAE;UACpBN,UAAU,CAACkB,IAAI,CAAC;QAClB,CAAC,MAAM;UACLb,iBAAiB,EAAE;QACrB;MACF;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACdC,QAAQ,CAAC;QACPgB,OAAO,EAAEjB,KAAK,CAACiB,OAAO,IAAI;MAC5B,CAAC,CAAC;IACJ;IAEAlB,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAEH,OACI;IAACD,OAAO;IAAEE,KAAK;IAAEJ,KAAK;IAAEM;EAAiB,CAAC;AAG9C,CAAC;AAAC,GA1DIP,QAAQ;AA4Dd,eAAeA,QAAQ"},"metadata":{},"sourceType":"module"}